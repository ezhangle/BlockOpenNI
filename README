Block OpenNI
------------
A C++ wrapper for OpenNI

2011-06-20:
This block is going through heavy remake and so old code/methods are mixed with new methods for the moment.
I will be changing the way things are handled at the moment when i'm finished. All for better support on multiple devices.





Basic description
-----------------

Support for several generators as Image, IR, Depth and User.
Skeleton tracking support is available.




How to use
----------

You need to install the sensor drivers, OpenNI and NITE.
Note! PrimeSense drivers do not work with the Kinect. 


So here's a step-by-step installationg guide:
(The links you'll find here are the latest unstable at the time of writing)
OpenNI 1.3.2.3
Nite 1.4.1.2
SensorKinect 5.0.3.4


Windows 32bit:
--------------

Download/Install OpenNI:
http://openni.org/downloadfiles/opennimodules/openni-binaries/latest-unstable/163-openni-unstable-build-for-windows-x86-32-bit-v1-3-2/download

Download/Install Avin2's SensorKinect:
https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect-Win-OpenSource32-5.0.3.4.msi

Download/Install NITE:
http://openni.org/downloadfiles/opennimodules/openni-compliant-middleware-binaries/latest-unstable/177-primesense-nite-unstable-build-for-windows-x86-32-bit-v1-4-1/download

At this moment you should now be able to run the samples in OpenNI. 
Go to OpenNI's folder and browse to /Samples/Bin/Release. 
Run NiViewer.exe. You should now be looking at a window with the RGB and Depth feed coming from the kinect



MacOSX 32bit:
-------------

1) Download/Install MacPorts
	(Snow Leopard 10.6) https://distfiles.macports.org/MacPorts/MacPorts-2.0.0-10.5-Leopard.dmg
	(Lion 10.7) https://distfiles.macports.org/MacPorts/MacPorts-2.0.0-10.7-Lion.dmg

2) Open the terminal, install libtool/libusb.
	2.1) Type and run: sudo port install libtool
	2.2) Type and run: sudo port install libusb-devel +universal


3) Download/Untar OpenNI
	http://openni.org/downloadfiles/opennimodules/openni-binaries/latest-unstable/162-openni-unstable-build-for-macosx-10-6-universal-x86x64-3264-bit-v1-3-2/download
	3.1) Open the terminal, goto openni's folder you just untar'ed.
	3.2) Type and run: sudo ./install.sh

4) Download Avin2's SensorKinect
	https://github.com/avin2/SensorKinect/blob/unstable/Bin/SensorKinect-Bin-MacOSX-v5.0.3.4.tar.bz2
	4.1) Open the terminal, goto SensorKinect's folder you just untar'ed.
	4.2) Type and run: sudo ./install.sh

5) Download NITE
	http://openni.org/downloadfiles/opennimodules/openni-compliant-middleware-binaries/latest-unstable/176-primesense-nite-unstable-build-for-macosx-10-6-universal-x86x64-3264-bit-v1-4-1/download
	4.1) Open the terminal, goto NITE's folder you just untar'ed.
	4.2) Type and run: sudo ./install.sh

At this moment you should now be able to run the samples in OpenNI. 
Go to OpenNI's folder and browse to /Samples/Bin/Release (use terminal). 
Run ./NiViewer. You should now be looking at a window with the RGB and Depth feed coming from the kinect

	
Linux:
	Check Avin2's SensorKinect repo (@github) for more information.
	
	


	



Fork charlesdietrich/BlockOpenNI
--------------------------------

Support for Mac OS X. 


(Update)
For OS X: Follow the instructions found on the README file at https://github.com/avin2/SensorKinect.
It's well described (using macports) and works nicely.


Installation instructions for OS X:

First, get libusb and the kinect patch on http://openkinect.org/wiki/Getting_Started#Manual_Build_under_OSX. Patch libusb.

From http://discussions.info.apple.com/thread.jspa?threadID=2614064&amp;tstart=0, do the following:

env CFLAGS="-arch i386" ./configure; make
mv libusb/.libs/libusb-1.0.0.dylib /tmp/libusb-1.0.0.dylib.i386
make clean
env CFLAGS="-arch x86_64" ./configure; make
mv libusb/.libs/libusb-1.0.0.dylib /tmp/libusb-1.0.0.dylib.x86_64
lipo -create /tmp/libusb-1.0.0.dylib.i386 /tmp/libusb-1.0.0.dylib.x86_64 -output libusb/.libs/libusb-1.0.0.dylib
sudo make install

Install all the stuff on the OpenNI page. Just grab binaries.

Go to https://github.com/avin2/SensorKinect. Download the binary file for OS X. Install.

Change to your blocks directory

git clone https://github.com/charlesdietrich/BlockOpenNI.git

You can now compile. However, you will get an xml error when running.

This is a hack: You need to copy BlockOpenNI/samples/BlockOpenNISample/data  to ~/Library/Developer/Xcode/Build/Products/Debug/. This should be done with a resource.

Now you should be good to go. If you get No PS sensor is connected! error, try running another Kinect program, and then running again.

Now you can repeat above steps with BlockOpenNISkeleton.
